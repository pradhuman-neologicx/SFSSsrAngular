 saveStep1() {
    if (this.step1Form.valid) {
      const formData = new FormData();
      Object.keys(this.step1Form.value).forEach((key) => {
        formData.append(key, this.step1Form.get(key)?.value);
      });

      this.testService.saveTestStep1(formData).subscribe({
        next: (response: any) => {
          if (response.status === 200 || response.status === 201) {
            this.testId = response.data.id; // Assuming the backend returns the test ID
            this.currentStep = 2;
          } else {
            this.errorMessage = response.message || 'Failed to save Step 1';
            alert(this.errorMessage);
          }
        },
        error: (error) => {
          this.errorMessage = error.message || 'An error occurred while saving Step 1';
          alert(this.errorMessage);
        },
      });
    } else {
      this.step1Form.markAllAsTouched();
      this.errorMessage = 'Please fill all required fields in Step 1';
      alert(this.errorMessage);
    }
  }

  previousStep() {
    this.currentStep = 1;
  }

  submitTest() {
    if (this.step2Form.valid) {
      const formData = new FormData();
      Object.keys(this.step2Form.value).forEach((key) => {
        formData.append(key, this.step2Form.get(key)?.value);
      });
      formData.append('test_id', this.testId);

      this.testService.saveTestStep2(formData).subscribe({
        next: (response: any) => {
          if (response.status === 200 || response.status === 201) {
            this.successMessage = 'Test Created';
            setTimeout(() => {
              this.openSuccessMessage = true;
              setTimeout(() => {
                this.openSuccessMessage = false;
                this.cancel();
              }, 1000);
            }, 200);
          } else {
            this.errorMessage = response.message || 'Failed to submit test';
            alert(this.errorMessage);
          }
        },
        error: (error) => {
          this.errorMessage = error.message || 'An error occurred while submitting';
          alert(this.errorMessage);
        },
      });
    } else {
      this.step2Form.markAllAsTouched();
      this.errorMessage = 'Please fill all required fields in Step 2';
      alert(this.errorMessage);
    }
  }